(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>s});var r=t(15),i=t.n(r),o=t(645),a=t.n(o)()(i());a.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Hina+Mincho&display=swap);"]),a.push([e.id,'* {\r\n  padding: 0;\r\n  margin: 0;\r\n  box-sizing: border-box;\r\n  font-family: "Hina Mincho", serif;\r\n}\r\nbody {\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-template-rows: 1fr 1fr;\r\n  grid-template:\r\n    "buttons"\r\n    "content";\r\n  height: 100vh;\r\n  background-image: linear-gradient(to top, #a18cd1 0%, #fbc2eb 100%);\r\n}\r\nh1 {\r\n  font-size: 3rem;\r\n}\r\nh2 {\r\n  font-size: 2rem;\r\n}\r\n.button {\r\n  /*grid-area: buttons;\r\n    width: 150px;\r\n    height: 100px;\r\n    background-color: transparent;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    margin-top: 30px;\r\n    */\r\ndisplay: inline-block;\r\nwidth: 200px;\r\nheight: 100px;\r\npadding: 0.3em 1.2em;\r\nmargin: 0.5rem 0.1em 0.1em 0;\r\nborder: 0.16em solid rgba(255, 255, 255, 0);\r\nborder-radius: 2em;\r\nbox-sizing: border-box;\r\ntext-decoration: none;\r\nfont-size: 1.5rem;\r\nfont-weight: 300;\r\ncolor: #ffffff;\r\ntext-shadow: 0 0.04em 0.04em rgba(0, 0, 0, 0.35);\r\ntext-align: center;\r\ntransition: all 0.2s;\r\nbackground-color:#f14e4e\r\n}\r\n.container {\r\n  position: absolute;\r\n  top: 175px;\r\n  grid-area: content;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n  flex-direction: column;\r\n  width: 100%;\r\n}\r\n\r\n.selected {\r\n  background-image: linear-gradient(to top, #a18cd1 0%, #fbc2eb 100%);\r\n}\r\n.buttondiv {\r\n  display: flex;\r\n  gap: 200px;\r\n  justify-content: center;\r\n  padding-bottom: 40px;\r\n}\r\n.cake {\r\n  height: 40%;\r\n  width: 40%;\r\n}\r\n.dessert-menu {\r\n  display: grid;\r\n  grid-template:\r\n    "title title title"\r\n    "cake brownie cheesecake"\r\n    "pancake pancake cupcake";\r\n  border: 3px solid black;\r\n  border-radius: 10px;\r\n  width: 1000px;\r\n}\r\n\r\nbody > div.container > ul > h1 {\r\n  align-self: center;\r\n  grid-area: title;\r\n}\r\nbody > div.container > ul > li:nth-child(2) {\r\n  grid-area: cake;\r\n}\r\nbody > div.container > ul > li:nth-child(3) {\r\n  grid-area: brownie;\r\n}\r\n\r\nbody > div.container > ul > li:nth-child(4) {\r\n  grid-area: cheesecake;\r\n}\r\nbody > div.container > ul > li:nth-child(5) {\r\n  grid-area: pancake;\r\n}\r\nbody > div.container > ul > li:nth-child(6) {\r\n  grid-area: cupcake;\r\n}\r\n\r\nli {\r\n  list-style: none;\r\n\r\n  padding: 1rem;\r\n}\r\nul > * {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n}\r\n\r\nli > img {\r\n  margin: 1rem;\r\n}\r\n\r\np {\r\n  font-size: 1.3rem;\r\n}\r\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAEA;EACE,UAAU;EACV,SAAS;EACT,sBAAsB;EACtB,iCAAiC;AACnC;AACA;EACE,aAAa;EACb,0BAA0B;EAC1B,2BAA2B;EAC3B;;aAEW;EACX,aAAa;EACb,mEAAmE;AACrE;AACA;EACE,eAAe;AACjB;AACA;EACE,eAAe;AACjB;AACA;EACE;;;;;;;KAOG;AACL,qBAAqB;AACrB,YAAY;AACZ,aAAa;AACb,oBAAoB;AACpB,4BAA4B;AAC5B,2CAA2C;AAC3C,kBAAkB;AAClB,sBAAsB;AACtB,qBAAqB;AACrB,iBAAiB;AACjB,gBAAgB;AAChB,cAAc;AACd,gDAAgD;AAChD,kBAAkB;AAClB,oBAAoB;AACpB;AACA;AACA;EACE,kBAAkB;EAClB,UAAU;EACV,kBAAkB;EAClB,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,kBAAkB;EAClB,sBAAsB;EACtB,WAAW;AACb;;AAEA;EACE,mEAAmE;AACrE;AACA;EACE,aAAa;EACb,UAAU;EACV,uBAAuB;EACvB,oBAAoB;AACtB;AACA;EACE,WAAW;EACX,UAAU;AACZ;AACA;EACE,aAAa;EACb;;;6BAG2B;EAC3B,uBAAuB;EACvB,mBAAmB;EACnB,aAAa;AACf;;AAEA;EACE,kBAAkB;EAClB,gBAAgB;AAClB;AACA;EACE,eAAe;AACjB;AACA;EACE,kBAAkB;AACpB;;AAEA;EACE,qBAAqB;AACvB;AACA;EACE,kBAAkB;AACpB;AACA;EACE,kBAAkB;AACpB;;AAEA;EACE,gBAAgB;;EAEhB,aAAa;AACf;AACA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,sBAAsB;AACxB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,iBAAiB;AACnB",sourcesContent:['@import url("https://fonts.googleapis.com/css2?family=Hina+Mincho&display=swap");\r\n\r\n* {\r\n  padding: 0;\r\n  margin: 0;\r\n  box-sizing: border-box;\r\n  font-family: "Hina Mincho", serif;\r\n}\r\nbody {\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-template-rows: 1fr 1fr;\r\n  grid-template:\r\n    "buttons"\r\n    "content";\r\n  height: 100vh;\r\n  background-image: linear-gradient(to top, #a18cd1 0%, #fbc2eb 100%);\r\n}\r\nh1 {\r\n  font-size: 3rem;\r\n}\r\nh2 {\r\n  font-size: 2rem;\r\n}\r\n.button {\r\n  /*grid-area: buttons;\r\n    width: 150px;\r\n    height: 100px;\r\n    background-color: transparent;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    margin-top: 30px;\r\n    */\r\ndisplay: inline-block;\r\nwidth: 200px;\r\nheight: 100px;\r\npadding: 0.3em 1.2em;\r\nmargin: 0.5rem 0.1em 0.1em 0;\r\nborder: 0.16em solid rgba(255, 255, 255, 0);\r\nborder-radius: 2em;\r\nbox-sizing: border-box;\r\ntext-decoration: none;\r\nfont-size: 1.5rem;\r\nfont-weight: 300;\r\ncolor: #ffffff;\r\ntext-shadow: 0 0.04em 0.04em rgba(0, 0, 0, 0.35);\r\ntext-align: center;\r\ntransition: all 0.2s;\r\nbackground-color:#f14e4e\r\n}\r\n.container {\r\n  position: absolute;\r\n  top: 175px;\r\n  grid-area: content;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n  flex-direction: column;\r\n  width: 100%;\r\n}\r\n\r\n.selected {\r\n  background-image: linear-gradient(to top, #a18cd1 0%, #fbc2eb 100%);\r\n}\r\n.buttondiv {\r\n  display: flex;\r\n  gap: 200px;\r\n  justify-content: center;\r\n  padding-bottom: 40px;\r\n}\r\n.cake {\r\n  height: 40%;\r\n  width: 40%;\r\n}\r\n.dessert-menu {\r\n  display: grid;\r\n  grid-template:\r\n    "title title title"\r\n    "cake brownie cheesecake"\r\n    "pancake pancake cupcake";\r\n  border: 3px solid black;\r\n  border-radius: 10px;\r\n  width: 1000px;\r\n}\r\n\r\nbody > div.container > ul > h1 {\r\n  align-self: center;\r\n  grid-area: title;\r\n}\r\nbody > div.container > ul > li:nth-child(2) {\r\n  grid-area: cake;\r\n}\r\nbody > div.container > ul > li:nth-child(3) {\r\n  grid-area: brownie;\r\n}\r\n\r\nbody > div.container > ul > li:nth-child(4) {\r\n  grid-area: cheesecake;\r\n}\r\nbody > div.container > ul > li:nth-child(5) {\r\n  grid-area: pancake;\r\n}\r\nbody > div.container > ul > li:nth-child(6) {\r\n  grid-area: cupcake;\r\n}\r\n\r\nli {\r\n  list-style: none;\r\n\r\n  padding: 1rem;\r\n}\r\nul > * {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n}\r\n\r\nli > img {\r\n  margin: 1rem;\r\n}\r\n\r\np {\r\n  font-size: 1.3rem;\r\n}\r\n'],sourceRoot:""}]);const s=a},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t=e(n);return n[2]?"@media ".concat(n[2]," {").concat(t,"}"):t})).join("")},n.i=function(e,t,r){"string"==typeof e&&(e=[[null,e,""]]);var i={};if(r)for(var o=0;o<this.length;o++){var a=this[o][0];null!=a&&(i[a]=!0)}for(var s=0;s<e.length;s++){var c=[].concat(e[s]);r&&i[c[0]]||(t&&(c[2]?c[2]="".concat(t," and ").concat(c[2]):c[2]=t),n.push(c))}},n}},15:e=>{function n(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}e.exports=function(e){var t,r,i=(r=4,function(e){if(Array.isArray(e))return e}(t=e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var r,i,o=[],a=!0,s=!1;try{for(t=t.call(e);!(a=(r=t.next()).done)&&(o.push(r.value),!n||o.length!==n);a=!0);}catch(e){s=!0,i=e}finally{try{a||null==t.return||t.return()}finally{if(s)throw i}}return o}}(t,r)||function(e,t){if(e){if("string"==typeof e)return n(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?n(e,t):void 0}}(t,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=i[1],a=i[3];if(!a)return o;if("function"==typeof btoa){var s=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),c="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(s),d="/*# ".concat(c," */"),l=a.sources.map((function(e){return"/*# sourceURL=".concat(a.sourceRoot||"").concat(e," */")}));return[o].concat(l).concat([d]).join("\n")}return[o].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var o={},a=[],s=0;s<e.length;s++){var c=e[s],d=r.base?c[0]+r.base:c[0],l=o[d]||0,A="".concat(d," ").concat(l);o[d]=l+1;var u=t(A),p={css:c[1],media:c[2],sourceMap:c[3]};-1!==u?(n[u].references++,n[u].updater(p)):n.push({identifier:A,updater:i(p,r),references:1}),a.push(A)}return a}function i(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap)return;t.update(e=n)}else t.remove()}}e.exports=function(e,i){var o=r(e=e||[],i=i||{});return function(e){e=e||[];for(var a=0;a<o.length;a++){var s=t(o[a]);n[s].references--}for(var c=r(e,i),d=0;d<o.length;d++){var l=t(o[d]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}o=c}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r=t.css,i=t.media,o=t.sourceMap;i?e.setAttribute("media",i):e.removeAttribute("media"),o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleTagTransform(r,e)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(r){var i=n[r];if(void 0!==i)return i.exports;var o=n[r]={id:r,exports:{}};return e[r](o,o.exports,t),o.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),(()=>{function e(){const e=document.querySelector(".container"),n=document.createElement("h1");n.textContent="Josh's Desserts";const t=document.createElement("h2"),r=document.createElement("h2");t.style.margin="1.5rem",t.textContent="Here at Josh's desserts you will find the sweetest and most tastiest desserts in all the land!",r.textContent="We make all of our desserts fresh on premises with locally sourced organic ingredients.",e.appendChild(n),e.appendChild(t),e.appendChild(r)}function n(){const e=document.querySelector(".container"),n=document.createElement("h1"),t=document.createElement("ul"),r=document.createElement("h2"),i=document.createElement("h3"),o=document.createElement("h3"),a=document.createElement("h3");r.textContent="Josh Harrison",i.textContent="Manager",o.textContent="07783300571",a.textContent="josh@desertshop.com",n.textContent="Contact Us!",console.log(e),e.appendChild(n),e.appendChild(t),t.appendChild(r),t.appendChild(i),t.appendChild(o),t.appendChild(a)}const r=t.p+"images/colourcake.svg",i=t.p+"images/brownie.svg",o=t.p+"images/cheesecake.svg",a=t.p+"images/pancake.svg",s=t.p+"images/cupcake.svg";function c(){const e=document.querySelector(".container"),n=document.createElement("ul"),t=document.createElement("h1"),c=document.createElement("li"),d=document.createElement("li"),l=document.createElement("li"),A=document.createElement("li"),u=document.createElement("li"),p=document.createElement("h2"),m=document.createElement("h2"),h=document.createElement("h2"),g=document.createElement("h2"),C=document.createElement("h2"),f=document.createElement("p"),b=document.createElement("p"),E=document.createElement("p"),B=document.createElement("p"),y=document.createElement("p");f.textContent="All our desserts are freshly baked in store using our finest ingredients ",b.textContent="All our desserts are freshly baked in store using our finest ingredients",E.textContent="All our desserts are freshly baked in store using our finest ingredients",B.textContent="All our desserts are freshly baked in store using our finest ingredients",y.textContent="All our desserts are freshly baked in store using our finest ingredients";const x=document.createElement("img"),v=document.createElement("img"),k=document.createElement("img"),w=document.createElement("img"),S=document.createElement("img");x.classList.add("cake"),v.classList.add("cake"),k.classList.add("cake"),w.classList.add("cake"),S.classList.add("cake"),x.src=r,v.src=i,k.src=o,w.src=a,S.src=s,t.textContent="Dessert Menu",p.textContent="Chocolate Cake",m.textContent="Brownies",h.textContent="Cheesecake",g.textContent="Pancakes",C.textContent="Cupcake",c.appendChild(p),d.appendChild(m),l.appendChild(h),A.appendChild(g),u.appendChild(C),c.appendChild(f),d.appendChild(b),l.appendChild(E),A.appendChild(B),u.appendChild(y),c.appendChild(x),d.appendChild(v),l.appendChild(k),A.appendChild(w),u.appendChild(S),n.classList.add("dessert-menu"),e.appendChild(n),n.appendChild(t),n.appendChild(c),n.appendChild(d),n.appendChild(l),n.appendChild(A),n.appendChild(u)}var d=t(379),l=t.n(d),A=t(795),u=t.n(A),p=t(569),m=t.n(p),h=t(565),g=t.n(h),C=t(216),f=t.n(C),b=t(589),E=t.n(b),B=t(426),y={};y.styleTagTransform=E(),y.setAttributes=g(),y.insert=m().bind(null,"head"),y.domAPI=u(),y.insertStyleElement=f(),l()(B.Z,y),B.Z&&B.Z.locals&&B.Z.locals,n(),c();const x=document.querySelector(".container"),v=document.createElement("div"),k=document.createElement("button"),w=document.createElement("button"),S=document.createElement("button");x.innerHTML="",e(),k.classList.add("selected","button","home"),w.classList.add("button","contact"),S.classList.add("button","menu"),k.textContent="Home",w.textContent="Contact",S.textContent="Menu";const L=[k,w,S];class j{constructor(e,n){this.page=e,this.isShowing=n}showPage(e){e()}}let M=new j(e,!0),T=new j(n,!1),U=new j(c,!1);L.forEach((t=>{v.appendChild(t),t.addEventListener("click",(()=>{t.classList.contains("home")&&(x.textContent="",M.isShowing=!0,T.isShowing=!1,U.isShowing=!1,M.isShowing&&(S.classList.remove("selected"),k.classList.add("selected"),w.classList.remove("selected")),M.showPage(e)),t.classList.contains("menu")&&(x.textContent="",M.isShowing=!1,T.isShowing=!1,U.isShowing=!0,U.isShowing&&(S.classList.add("selected"),k.classList.remove("selected"),w.classList.remove("selected")),U.showPage(c)),t.classList.contains("contact")&&(x.textContent="",M.isShowing=!1,T.isShowing=!0,U.isShowing=!1,T.isShowing&&(S.classList.remove("selected"),k.classList.remove("selected"),w.classList.add("selected")),T.showPage(n))}))})),[M,T,U].forEach((e=>console.log(e.isShowing))),v.classList.add("buttondiv"),document.body.appendChild(v)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,